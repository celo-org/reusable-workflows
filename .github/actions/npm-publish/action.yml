---
name: "NPM publish package"
description: "Publish a npm package on npmjs.org"
inputs:
  node-version:
    description: "Node version"
    required: true
  registry-url:
    description: "NPM registry URL"
    required: false
    default: "https://registry.npmjs.org"
  package-access:
    description: "public|restricted access for package"
    required: false
    default: restricted
  package-dir:
    description: "Package directory"
    required: true
  akeyless-api-gateway:
    description: "Akeyless API Gateway"
    required: true
  akeyless-github-access-id:
    description: "Akeyless Access ID"
    required: true
  akeyless-token-path:
    description: "Akeyless token path"
    required: true

runs:
  using: "composite"
  steps:
    - name: Akeyless Get Secrets
      id: get_auth_token
      uses:
        docker://us-west1-docker.pkg.dev/devopsre/akeyless-public/akeyless-action:latest
      with:
        api-url: ${{ inputs.akeyless-api-gateway }}
        access-id: ${{ inputs.akeyless-github-access-id }}
        static-secrets: '{"${{ inputs.akeyless-token-path }}":"NPM_TOKEN"}'

    # Setup Node JS with input from node version and set the registry url
    # (defaults to npm registry)
    - name: 'Setup Node JS'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}

    # Install yarn package manager
    - name: 'Setup yarn'
      shell: bash
      run: |
        npm install --global yarn

    # Clabs uses yarn so npm ci (the ci/cd version of npm install) won't work
    # without a json.package lock file, so must use yarn here too
    - uses: bahmutov/npm-install@v1
      with:
        working-directory: ${{ inputs.package-dir }}

    - run: yarn build
      shell: bash

    - name: Set tag
      id: set-tag
      shell: bash
      run: |
        if  grep version ${{inputs.package-dir }}/package.json | grep alpha;
        then
          echo "tag=alpha" >> $GITHUB_OUTPUT
        elif grep version ${{inputs.package-dir }}/package.json | grep beta;
        then
          echo "tag=beta" >> $GITHUB_OUTPUT
        fi

    # You must cd into the package directory to run publish,
    # you can't do it from the root directory
    - run: |
        if [ "${{ steps.set-tag.outputs.tag }}" == "" ]; then
          cd ${{ inputs.package-dir }} && npm publish --provenance
        else
          cd ${{ inputs.package-dir }} && \
          npm publish --tag ${{ steps.set-tag.outputs.tag }} --provenance --access ${{ inputs.package-access }}
        fi
      shell: bash
      env:
        # this is the access token in NPM. Note, even though it recommends
        # you use granular over classic access tokens, they won't work.
        # you'll have to choose classic token,
        # then pick automation token from the next screen.
        NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
