---
name: 'Run Container Workflow'
on: 
  workflow_call:
    inputs:
      workload-id-provider:
        required: true
        type: string
      service-account:
        required: true
        type: string
      artifact-registry:
        required: true
        type: string
      tag:
        required: true
        type: string
      platforms:
        required: true
        type: string
        default: "linux/amd64"
      context:
        required: true
        type: string
      file:
        required: false
        type: string
      build-args:
        required: false
        type: string
      provenance:
        required: false
        type: boolean
        default: true
      trivy:
        required: false
        type: boolean
        default: true
      #vuln-type:
      #  required: false
      #  type: string
      #  default: "os,library"
      #severity:
      #  required: false
      #  type: string
      #  default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      #trivy-timeout: 
      #  required: false
      #  type: string
      #  default: 5m


jobs:
  auth-build-push-scan-container:
    runs-on: ubuntu-latest
    permissions: # Required for workload identity auth and push the trivy results to GitHub
      contents: read
      id-token: write
      security-events: write
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      
      - name: Split location and app names
        id: split
        env:
          REGISTRY: ${{ inputs.artifact-registry }}
        shell: bash
        run: |
            location=${REGISTRY%%/*}
            app_name=${REGISTRY##*/}
            echo "location=$location"
            echo "app_name=$app_name"
            echo "location=$location" >> $GITHUB_OUTPUT
            echo "app_name=$app_name" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        uses: celo-org/reusable-workflows/.github/actions/auth-gcp-artifact-registry@main
        with:
          workload-id-provider: ${{ inputs.workload-id-provider }}
          service-account: ${{ inputs.service-account }}
          docker-gcp-registries: ${{ steps.split.outputs.location }}

      - name: Build, push and scan the container
        uses: celo-org/reusable-workflows/.github/actions/build-container@main
        with:
          platforms: ${{ inputs.platforms }}
          registry: ${{ inputs.artifact-registry }}
          tag: ${{ inputs.tag }}
          context: ${{ inputs.context }}
          dockerfile: ${{ inputs.file }}
          push: ${{ fromJSON(true) }}
          load: ${{ fromJSON(false) }}
          trivy: ${{ fromJSON(inputs.trivy) }}
