---
name: 'Run Container Workflow'
on: 
  workflow_call:
    inputs:
      workload-id-provider:
        required: true
        type: string
      service-account:
        required: true
        type: string
      access-token-lifetime:
        description: "GCP token expiration timeout"
        required: false
        type: string
        default: "20m" 
      registry:
        required: true
        type: string
      platforms:
        type: string
        default: "linux/amd64"
      context:
        required: true
        type: string
      file:
        required: false
        type: string
      build-args:
        required: false
        type: string
      force-extra-tag:
        description: > 
          Sets one specific tag in addition to the automatically inferred 
          'release', 'edge', 'latest' and 'sha' tags
        required: false
        default: ""
      force-app-name:
        description: > 
          Sets the app name as a registry subfolder
          {registry}/{app-name}:{tag}
          If not set this will default to the repository name
        required: false
        default: ""
      provenance:
        required: false
        type: boolean
        default: true
      trivy:
        required: false
        type: boolean
        default: true

jobs:
  auth-build-push-scan-container:
    runs-on: ubuntu-latest
    permissions: # Required for workload identity auth and push the trivy results to GitHub
      contents: read
      id-token: write
      security-events: write
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: celo-org/reusable-workflows/.github/actions/auth-gcp-artifact-registry@main
        with:
          workload-id-provider: ${{ inputs.workload-id-provider }}
          service-account: ${{ inputs.service-account }}
          access-token-lifetime: ${{ inputs.access-token-lifetime }}
          docker-gcp-registries: ${{ inputs.registry}

      - name: Build, push and scan the container
        uses: celo-org/reusable-workflows/.github/actions/build-container@main
        with:
          platforms: ${{ inputs.platforms }}
          registry: ${{ inputs.registry }}
          app-name: ${{ inputs.registry || github.event.repository.name }}
          force-extra-tag: ${{ inputs.force-extra-tag }}
          context: ${{ inputs.context }}
          dockerfile: ${{ inputs.file }}
          build-args: ${{ inputs.build-args }}
          push: ${{ fromJSON(true) }}
          trivy: ${{ fromJSON(inputs.trivy) }}
