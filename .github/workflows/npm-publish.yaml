---
name: 'NPM Publish Workflow'
on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      registry-url:
        required: false
        type: string
        default: "https://registry.npmjs.org"
      package-dir:
        required: true
        type: string
#      akeyless-api-gateway:
#        required: true
#        type: string
#      akeyless-github-access-id:
#        required: true
#        type: string
#      akeyless-token-path:
#        required: true
#        type: string
    secrets:
      npm-token:
        required: true


jobs:
  Npm-publish:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      
#      - name: Akeyless Get Secrets
#        id: get_auth_token
#        uses: docker://us-west1-docker.pkg.dev/devopsre/akeyless-public/akeyless-action:latest
#        with:
#          api-url: ${{ inputs.akeyless-api-gateway }}
#          access-id: ${{ inputs.akeyless-github-access-id }}
#          #static-secrets: '{"/path/to/static/secret":"NPM_TOKEN"}'
#          static-secrets: "{\"${{ inputs.akeyless-token-path }}\":\"NPM_TOKEN\"}"
#

# Setup Node JS with input from node version and set the registry url (defaults to npm registry)
      - name: 'Setup Node JS'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: ${{ inputs.registry-url }} 
# We use yarn so npm ci (the ci/cd version of install won't work without a json.package lock file, so must use yarn here too
      - run: yarn install
      - run: yarn build
      - name: Set tag
        id: set-tag
        shell: bash
        run: |
          if grep version ${{inputs.package-dir }}/package.json | grep alpha; then
                echo "tag=alpha" >> $GITHUB_OUTPUT
          elif grep version ${{inputs.package-dir }}/package.json | grep beta; then
                echo "tag=beta" >> $GITHUB_OUTPUT
          fi

# You must cd into the package directory to run publish, you can't do it from the root directory
      - run: |
          if [ "${{ steps.set-tag.outputs.tag }}" == "" ]; then
                cd ${{ inputs.package-dir }} && npm publish 
              else
                cd ${{ inputs.package-dir }} && npm publish --tag ${{ steps.set-tag.outputs.tag }}
          fi

        env:
# this is the access token in NPM.  Note, even though it recommends you use granular over classic access tokens, they won't work.
# you'll have to choose classic token, then pick automation token from the next screen.
          NODE_AUTH_TOKEN: ${{ secrets.npm-token }}

