name: 'Run Container Workflow'
on: 
  workflow_call:
    inputs:
      # Inputs remain the same as provided

jobs:
  auth-build-push-scan-container:
    runs-on: ${{ fromJson(inputs.runs_on) }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    defaults:
      run:
        shell: bash 
    environment:
      name: ${{ inputs.environment }}
      url: "${{ inputs.environment != '' && format('https://{0}:{1}', inputs.artifact-registry, inputs.tags) || '' }}"
    permissions:
      actions: read
      contents: write
      id-token: write
      security-events: write
      attestations: write
      pull-requests: write
    steps:
      - name: Harden Runner
        if: runner.environment == 'github-hosted'
        uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          policy: ${{ inputs.debug_enabled == true && 'docker-debug' || 'docker' }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug_enabled == true 
        with:
          detached: true
          limit-access-to-actor: true
    
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: celo-org/trivy-composite-action@v1.0.0-chatgpt
        if: inputs.trivy-enabled == true
        with:
          scan-ref: ${{ inputs.context }}
          scan-type: fs
          pr-comment: ${{ inputs.pr-comment }}
          summary: ${{ inputs.summary }}
          skip-dirs: ${{ inputs.trivy-skip-dirs }}

      - name: Split location and app names
        id: split
        env:
          REGISTRY: ${{ inputs.artifact-registry }}
        run: |
          location=${REGISTRY%%/*}
          app_name=${REGISTRY##*/}
          echo "location=$location" >> $GITHUB_OUTPUT
          echo "app_name=$app_name" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ inputs.workload-id-provider }}
          service_account: ${{ inputs.service-account }}
          access_token_lifetime: ${{ inputs.access-token-lifetime }}
          token_format: access_token 

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.artifact-registry }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build, push and scan the container
        id: build-push
        uses: celo-org/docker-build-composite-action@v1.0.0-chatgpt
        with:
          platforms: ${{ inputs.platforms }}
          registry: ${{ inputs.artifact-registry }}
          tags: ${{ inputs.tags }}
          context: ${{ inputs.context }}
          dockerfile: ${{ inputs.file }}
          build-args: ${{ inputs.build-args }}
          push: ${{ fromJSON(true) }}
          summary: ${{ inputs.summary }}
          pr-comment: ${{ inputs.pr-comment }} 
          trivy-skip-dirs: ${{ inputs.trivy-skip-dirs }}
          skip-setup-trivy: true
          trivy-enabled: ${{ inputs.trivy-enabled }}

      - name: Generate Summary
        id: summary
        run: |
          echo "Container Image Summary:"
          echo "- Registry: ${{ steps.split.outputs.location }}"
          echo "- Application Name: ${{ steps.split.outputs.app_name }}"
          echo "- Tags: ${{ inputs.tags }}"
          echo "- Platforms: ${{ inputs.platforms }}"
          echo "- Scan Results: (Trivy outputs or relevant scan summary)"
          echo "::set-output name=summary::Container build and push completed successfully for ${{ steps.split.outputs.app_name }}."
