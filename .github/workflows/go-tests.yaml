---
name: 'Run Go Tests'
on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.22"
      path:
        required: true
        type: string
        description: "working directory"
      runs-on:
        default: "['ubuntu-latest']"
        type: string
        description: "github runner tags"
      timeout-minutes:
        default: 30
        type: number
        description: "Workflow timeout"
      golangci-lint-version:
        description: "Golangci-lint version"
        type: string
        default: latest
      golangci-lint-args:
        description: "Golangci-lint arguments"
        type: string
        default: ""
      golangci-lint-skip-cache:
        description: "Skip cache if enabled"
        type: boolean
        default: false
      golangci-lint-only-new-issues:
        description: "only run on new issues in local PR diff"
        type: boolean
        default: false
      golangci-lint-problem-matchers:
        description: "run with golangci problem matchers"
        type: boolean
        default: false
      disable-caching:
        description: "disable caching for go dependencies"
        type: boolean
        default: false
      cache-dependency-path:
        description: "path to the go dependency file (such as go.sum)"
        type: string
        default: "" 
      warn-only:
        description: to warn instead of failing the job
        type: boolean
        default: false
      debug-enabled:
        default: false
        required: false
        type: boolean
        description: "run tmate for troubleshooting"

jobs:
  go-tests:
    runs-on: ubuntu-24.04
    permissions: # Must change the job token permissions to use JWT auth
      contents: read
      pull-requests: read
      id-token: write
    runs-on: ${{ fromJson(inputs.runs-on) }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    defaults:
      run:
        shell: bash 
        working-directory: ${{ inputs.path }}
    steps:
      # Security policies go-tests and go-tests-debug are configured in step security app
      # Policy can be seen here https://app.stepsecurity.io/github/celo-org/actions/policies
      # disable-sudo is set to false if debug is true, because tmate requires root to work.
      - name: Harden Runner
        if: runner.environment == 'github-hosted'
        uses: step-security/harden-runner@v2
        with:
          policy: ${{ inputs.debug-enabled == true && 'go-tests-debug' || 'go-tests' }}

      # Only turns on tmate if workflow_dispatch set debug to true.
      # limit-access-to-actor or some other security precaution should be added
      # so anyone with the link can't ssh in without a key.
      # Currently detaches and runs concurrently with workflow, can change
      # if needed

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48
        if: inputs.debug-enabled == true 
        with:
          detached: true
          limit-access-to-actor: true
    
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
          cache: ${{ !inputs.disable-caching }}
          cache-dependency-path: "${{ inputs.cache-dependency-path != '' && inputs.cache-dependency-path ||  format('{0}/**/*.sum', inputs.path) }}"

      - name: Verify dependencies
        run: go mod verify

      - name: golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8
        continue-on-error: ${{ inputs.warn-only }}
        with:
          version: ${{ inputs.golangci-lint-version }}
          args: "${{ inputs.gologanci-lint-args }} --timeout=${{ inputs.timeout-minutes }}m"
          skip-cache: ${{ inputs.golangci-lint-skip-cache }}
          problem-matchers: ${{ inputs.golangci-lint-problem-matchers }}
          only-new-issues: ${{ inputs.golangci-lint-only-new-issues }}
          working-directory: ${{ inputs.path }}

      # Make sure build works.  This may not be necessary, since golangci might be able to find the same issues.
      # have to investigate further
      - name: Build
        run: go build -v ./...
      
      # Run tests
      - name: Go Tests
        uses: robherley/go-test-action@b19f6aadabfb1ad85079065b21aa2af132466468
        continue-on-error: ${{ inputs.warn-only }}
        with:
          moduleDirectory: ${{ inputs.path }}
